name: Prod Deployment - Backend to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  RESOURCE_GROUP: sk-hd
  AKS_NAME: skhd-aks
  ACR_NAME: skhdaks
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy_prod:
    runs-on: ubuntu-latest
    environment:
      name: Production   # ✅ GitHub will require manual approval if configured
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.AKS_NAME }} \
            --overwrite-existing

      - name: Deploy backend services to AKS
        run: |
          kubectl apply -f k8s/configmaps.yaml
          kubectl apply -f k8s/secrets.yaml
          kubectl apply -f k8s/product-db.yaml
          kubectl apply -f k8s/order-db.yaml
          kubectl apply -f k8s/product-service.yaml
          kubectl apply -f k8s/order-service.yaml

      - name: Update container images
        run: |
          kubectl set image deployment/product-service \
            product-service-container=${{ env.ACR_NAME }}.azurecr.io/product-service:${{ env.IMAGE_TAG }}
          kubectl set image deployment/order-service \
            order-service-container=${{ env.ACR_NAME }}.azurecr.io/order-service:${{ env.IMAGE_TAG }}

      - name: Wait for deployments to complete
        run: |
          kubectl rollout status deployment/product-service --timeout=300s
          kubectl rollout status deployment/order-service --timeout=300s

      - name: Verify services
        run: |
          PRODUCT_IP=$(kubectl get svc product-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          ORDER_IP=$(kubectl get svc order-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

          until [ -n "$PRODUCT_IP" ] && [ -n "$ORDER_IP" ]; do
            echo "⏳ Waiting for EXTERNAL-IP..."
            sleep 5
            PRODUCT_IP=$(kubectl get svc product-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            ORDER_IP=$(kubectl get svc order-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          done

          echo "PRODUCT_IP=$PRODUCT_IP"
          echo "ORDER_IP=$ORDER_IP"

          if ! curl --max-time 10 http://$PR
